<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baidu.ms.mapper.NotificationMapper">
    <resultMap id="BaseResultMap" type="com.baidu.ms.pojo.Notification">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="read_status" jdbcType="INTEGER" property="readStatus"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="tips_str" jdbcType="VARCHAR" property="tipsStr"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="shop_id" jdbcType="INTEGER" property="shopId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, type, read_status, order_id, tips_str, user_id, shop_id
  </sql>
    <select id="selectByExample" parameterType="com.baidu.ms.pojo.NotificationExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_notification
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_notification
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_notification
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.baidu.ms.pojo.NotificationExample">
        delete from t_notification
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.baidu.ms.pojo.Notification">
    insert into t_notification (id, type, read_status, 
      order_id, tips_str, user_id, 
      shop_id)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{readStatus,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{tipsStr,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{shopId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.baidu.ms.pojo.Notification">
        insert into t_notification
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="readStatus != null">
                read_status,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="tipsStr != null">
                tips_str,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="readStatus != null">
                #{readStatus,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="tipsStr != null">
                #{tipsStr,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.baidu.ms.pojo.NotificationExample" resultType="java.lang.Long">
        select count(*) from t_notification
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_notification
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.readStatus != null">
                read_status = #{record.readStatus,jdbcType=INTEGER},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>
            <if test="record.tipsStr != null">
                tips_str = #{record.tipsStr,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.shopId != null">
                shop_id = #{record.shopId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_notification
        set id = #{record.id,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        read_status = #{record.readStatus,jdbcType=INTEGER},
        order_id = #{record.orderId,jdbcType=INTEGER},
        tips_str = #{record.tipsStr,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        shop_id = #{record.shopId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.baidu.ms.pojo.Notification">
        update t_notification
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="readStatus != null">
                read_status = #{readStatus,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="tipsStr != null">
                tips_str = #{tipsStr,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baidu.ms.pojo.Notification">
    update t_notification
    set type = #{type,jdbcType=INTEGER},
      read_status = #{readStatus,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      tips_str = #{tipsStr,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>