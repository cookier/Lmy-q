<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baidu.ms.mapper.DataFanstagOrderMapper">
    <resultMap id="BaseResultMap" type="com.baidu.ms.pojo.DataFanstagOrder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="fans_count" jdbcType="INTEGER" property="fansCount"/>
        <result column="wechat_added" jdbcType="INTEGER" property="wechatAdded"/>
        <result column="mobile_added" jdbcType="INTEGER" property="mobileAdded"/>
        <result column="pay_order_count" jdbcType="INTEGER" property="payOrderCount"/>
        <result column="pay_amount" jdbcType="DOUBLE" property="payAmount"/>
        <result column="pay_goods_count" jdbcType="INTEGER" property="payGoodsCount"/>
        <result column="pay_buyer" jdbcType="INTEGER" property="payBuyer"/>
        <result column="shop_id" jdbcType="INTEGER" property="shopId"/>
        <result column="calcu_date" jdbcType="TIMESTAMP" property="calcuDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, tag_name, tag_id, fans_count, wechat_added, mobile_added, pay_order_count, pay_amount, 
    pay_goods_count, pay_buyer, shop_id, calcu_date
  </sql>
    <select id="selectByExample" parameterType="com.baidu.ms.pojo.DataFanstagOrderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_data_fanstag_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_data_fanstag_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_data_fanstag_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.baidu.ms.pojo.DataFanstagOrderExample">
        delete from t_data_fanstag_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.baidu.ms.pojo.DataFanstagOrder">
    insert into t_data_fanstag_order (id, tag_name, tag_id, 
      fans_count, wechat_added, mobile_added, 
      pay_order_count, pay_amount, pay_goods_count, 
      pay_buyer, shop_id, calcu_date
      )
    values (#{id,jdbcType=INTEGER}, #{tagName,jdbcType=VARCHAR}, #{tagId,jdbcType=INTEGER}, 
      #{fansCount,jdbcType=INTEGER}, #{wechatAdded,jdbcType=INTEGER}, #{mobileAdded,jdbcType=INTEGER}, 
      #{payOrderCount,jdbcType=INTEGER}, #{payAmount,jdbcType=DOUBLE}, #{payGoodsCount,jdbcType=INTEGER}, 
      #{payBuyer,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{calcuDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.baidu.ms.pojo.DataFanstagOrder">
        insert into t_data_fanstag_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tagName != null">
                tag_name,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="fansCount != null">
                fans_count,
            </if>
            <if test="wechatAdded != null">
                wechat_added,
            </if>
            <if test="mobileAdded != null">
                mobile_added,
            </if>
            <if test="payOrderCount != null">
                pay_order_count,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="payGoodsCount != null">
                pay_goods_count,
            </if>
            <if test="payBuyer != null">
                pay_buyer,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="calcuDate != null">
                calcu_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tagName != null">
                #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="fansCount != null">
                #{fansCount,jdbcType=INTEGER},
            </if>
            <if test="wechatAdded != null">
                #{wechatAdded,jdbcType=INTEGER},
            </if>
            <if test="mobileAdded != null">
                #{mobileAdded,jdbcType=INTEGER},
            </if>
            <if test="payOrderCount != null">
                #{payOrderCount,jdbcType=INTEGER},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DOUBLE},
            </if>
            <if test="payGoodsCount != null">
                #{payGoodsCount,jdbcType=INTEGER},
            </if>
            <if test="payBuyer != null">
                #{payBuyer,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=INTEGER},
            </if>
            <if test="calcuDate != null">
                #{calcuDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.baidu.ms.pojo.DataFanstagOrderExample" resultType="java.lang.Long">
        select count(*) from t_data_fanstag_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_data_fanstag_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.tagName != null">
                tag_name = #{record.tagName,jdbcType=VARCHAR},
            </if>
            <if test="record.tagId != null">
                tag_id = #{record.tagId,jdbcType=INTEGER},
            </if>
            <if test="record.fansCount != null">
                fans_count = #{record.fansCount,jdbcType=INTEGER},
            </if>
            <if test="record.wechatAdded != null">
                wechat_added = #{record.wechatAdded,jdbcType=INTEGER},
            </if>
            <if test="record.mobileAdded != null">
                mobile_added = #{record.mobileAdded,jdbcType=INTEGER},
            </if>
            <if test="record.payOrderCount != null">
                pay_order_count = #{record.payOrderCount,jdbcType=INTEGER},
            </if>
            <if test="record.payAmount != null">
                pay_amount = #{record.payAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.payGoodsCount != null">
                pay_goods_count = #{record.payGoodsCount,jdbcType=INTEGER},
            </if>
            <if test="record.payBuyer != null">
                pay_buyer = #{record.payBuyer,jdbcType=INTEGER},
            </if>
            <if test="record.shopId != null">
                shop_id = #{record.shopId,jdbcType=INTEGER},
            </if>
            <if test="record.calcuDate != null">
                calcu_date = #{record.calcuDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_data_fanstag_order
        set id = #{record.id,jdbcType=INTEGER},
        tag_name = #{record.tagName,jdbcType=VARCHAR},
        tag_id = #{record.tagId,jdbcType=INTEGER},
        fans_count = #{record.fansCount,jdbcType=INTEGER},
        wechat_added = #{record.wechatAdded,jdbcType=INTEGER},
        mobile_added = #{record.mobileAdded,jdbcType=INTEGER},
        pay_order_count = #{record.payOrderCount,jdbcType=INTEGER},
        pay_amount = #{record.payAmount,jdbcType=DOUBLE},
        pay_goods_count = #{record.payGoodsCount,jdbcType=INTEGER},
        pay_buyer = #{record.payBuyer,jdbcType=INTEGER},
        shop_id = #{record.shopId,jdbcType=INTEGER},
        calcu_date = #{record.calcuDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.baidu.ms.pojo.DataFanstagOrder">
        update t_data_fanstag_order
        <set>
            <if test="tagName != null">
                tag_name = #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
            <if test="fansCount != null">
                fans_count = #{fansCount,jdbcType=INTEGER},
            </if>
            <if test="wechatAdded != null">
                wechat_added = #{wechatAdded,jdbcType=INTEGER},
            </if>
            <if test="mobileAdded != null">
                mobile_added = #{mobileAdded,jdbcType=INTEGER},
            </if>
            <if test="payOrderCount != null">
                pay_order_count = #{payOrderCount,jdbcType=INTEGER},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DOUBLE},
            </if>
            <if test="payGoodsCount != null">
                pay_goods_count = #{payGoodsCount,jdbcType=INTEGER},
            </if>
            <if test="payBuyer != null">
                pay_buyer = #{payBuyer,jdbcType=INTEGER},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=INTEGER},
            </if>
            <if test="calcuDate != null">
                calcu_date = #{calcuDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baidu.ms.pojo.DataFanstagOrder">
    update t_data_fanstag_order
    set tag_name = #{tagName,jdbcType=VARCHAR},
      tag_id = #{tagId,jdbcType=INTEGER},
      fans_count = #{fansCount,jdbcType=INTEGER},
      wechat_added = #{wechatAdded,jdbcType=INTEGER},
      mobile_added = #{mobileAdded,jdbcType=INTEGER},
      pay_order_count = #{payOrderCount,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DOUBLE},
      pay_goods_count = #{payGoodsCount,jdbcType=INTEGER},
      pay_buyer = #{payBuyer,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      calcu_date = #{calcuDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>