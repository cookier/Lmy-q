<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baidu.ms.mapper.PrizeAllocateMapper">
    <resultMap id="BaseResultMap" type="com.baidu.ms.pojo.PrizeAllocate">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="prize_id" jdbcType="INTEGER" property="prizeId"/>
        <result column="allocator_obj" jdbcType="INTEGER" property="allocatorObj"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.baidu.ms.pojo.PrizeAllocate">
        <result column="allocator_id" jdbcType="LONGVARCHAR" property="allocatorId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, type, prize_id, allocator_obj, create_time
  </sql>
    <sql id="Blob_Column_List">
    allocator_id
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.baidu.ms.pojo.PrizeAllocateExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_prize_allocate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.baidu.ms.pojo.PrizeAllocateExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_prize_allocate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_prize_allocate
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_prize_allocate
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.baidu.ms.pojo.PrizeAllocateExample">
        delete from t_prize_allocate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.baidu.ms.pojo.PrizeAllocate">
    insert into t_prize_allocate (id, type, prize_id, 
      allocator_obj, create_time, allocator_id
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=SMALLINT}, #{prizeId,jdbcType=INTEGER}, 
      #{allocatorObj,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{allocatorId,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.baidu.ms.pojo.PrizeAllocate">
        insert into t_prize_allocate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="prizeId != null">
                prize_id,
            </if>
            <if test="allocatorObj != null">
                allocator_obj,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="allocatorId != null">
                allocator_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="prizeId != null">
                #{prizeId,jdbcType=INTEGER},
            </if>
            <if test="allocatorObj != null">
                #{allocatorObj,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="allocatorId != null">
                #{allocatorId,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.baidu.ms.pojo.PrizeAllocateExample" resultType="java.lang.Long">
        select count(*) from t_prize_allocate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_prize_allocate
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=SMALLINT},
            </if>
            <if test="record.prizeId != null">
                prize_id = #{record.prizeId,jdbcType=INTEGER},
            </if>
            <if test="record.allocatorObj != null">
                allocator_obj = #{record.allocatorObj,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.allocatorId != null">
                allocator_id = #{record.allocatorId,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_prize_allocate
        set id = #{record.id,jdbcType=INTEGER},
        type = #{record.type,jdbcType=SMALLINT},
        prize_id = #{record.prizeId,jdbcType=INTEGER},
        allocator_obj = #{record.allocatorObj,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        allocator_id = #{record.allocatorId,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_prize_allocate
        set id = #{record.id,jdbcType=INTEGER},
        type = #{record.type,jdbcType=SMALLINT},
        prize_id = #{record.prizeId,jdbcType=INTEGER},
        allocator_obj = #{record.allocatorObj,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.baidu.ms.pojo.PrizeAllocate">
        update t_prize_allocate
        <set>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="prizeId != null">
                prize_id = #{prizeId,jdbcType=INTEGER},
            </if>
            <if test="allocatorObj != null">
                allocator_obj = #{allocatorObj,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="allocatorId != null">
                allocator_id = #{allocatorId,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.baidu.ms.pojo.PrizeAllocate">
    update t_prize_allocate
    set type = #{type,jdbcType=SMALLINT},
      prize_id = #{prizeId,jdbcType=INTEGER},
      allocator_obj = #{allocatorObj,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      allocator_id = #{allocatorId,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.baidu.ms.pojo.PrizeAllocate">
    update t_prize_allocate
    set type = #{type,jdbcType=SMALLINT},
      prize_id = #{prizeId,jdbcType=INTEGER},
      allocator_obj = #{allocatorObj,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>